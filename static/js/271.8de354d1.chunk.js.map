{"version":3,"file":"static/js/271.8de354d1.chunk.js","mappings":"0NACA,EAAuB,qBAAvB,EAAoD,sB,SCsEpD,EApEoB,WAAO,IAADA,EACxBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAqC,QAA7BP,EAAGK,EAAaG,IAAI,iBAAS,IAAAR,EAAAA,EAAI,GAC/CS,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAAnCG,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,GAAWC,EAAAA,EAAAA,MA6BjB,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAiB,KAAbT,EAAiB,CAUnBU,MAAM,mDAADC,OACgDX,EAAQ,8CAV7C,CACdY,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GAAQ,OAAIX,EAAWW,EAASZ,QAAQ,IAC7Cc,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GACpC,CACF,GAAG,CAACpB,KAGFuB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAYH,UAC3BC,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXC,KAAK,OACLC,MAAO9B,EACP+B,SAlCY,SAAAC,GACG,KAArBA,EAAIC,OAAOH,MACP/B,EAAgB,CAAC,GACjBA,EAAgB,CAAEmC,OAAQF,EAAIC,OAAOH,OAC3C,OAwCIJ,EAAAA,EAAAA,KAAA,MAAAD,SACsB,IAAnBpB,EAAQ8B,QACPT,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAEHpB,EAAQ+B,KAAI,SAAAC,GAAE,OACZX,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAE,WAAA5B,OAAa0B,EAAGG,IAAMC,MAAO,CAAEC,KAAMnC,GAAWkB,SACrDY,EAAGM,SAFCN,EAAGG,GAIP,QAMjB,EC9DA,EAJe,WACb,OAAOd,EAAAA,EAAAA,KAACkB,EAAW,GACrB,C","sources":["webpack://react-homework-template/./src/components/SearchBlock/Search.module.css?5b95","components/SearchBlock/SearchBlock.jsx","pages/Search.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Search_form__U5vWD\",\"input\":\"Search_input__G1KLA\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport styles from './Search.module.css';\nconst SearchBlock = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get('search') ?? '';\n  const [results, setResults] = useState([]);\n\n  const location = useLocation();\n\n  const handleInput = evt => {\n    evt.target.value === ''\n      ? setSearchParams({})\n      : setSearchParams({ search: evt.target.value });\n  };\n\n  useEffect(() => {\n    if (filmName !== '') {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjNGE2YzA4YmYzNTFmY2Q4YWViMDRhOTQ3MmYxOWEyZSIsInN1YiI6IjY0YTM0MzkzZThkMDI4MDEzOTE2MWE5NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.R_uy0Y5amAn0DH7cfOOqT828mZRf10axAv84-OrLYlI',\n        },\n      };\n\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?query=${filmName}&include_adult=false&language=en-US&page=1`,\n        options\n      )\n        .then(response => response.json())\n        .then(response => setResults(response.results))\n        .catch(err => console.error(err));\n    }\n  }, [filmName]);\n\n  return (\n    <>\n      <form className={styles.form}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={filmName}\n          onChange={handleInput}\n        />\n        {/* <button\n          onClick={() => {\n            setSearchParams({ a: 'kek' });\n          }}\n        >\n          Set\n        </button> */}\n      </form>\n      <ul>\n        {results.length === 0 ? (\n          <p>No matches</p>\n        ) : (\n          results.map(el => (\n            <li key={el.id}>\n              <Link to={`/movies/${el.id}`} state={{ from: location }}>\n                {el.title}\n              </Link>\n            </li>\n          ))\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default SearchBlock;\n","import SearchBlock from 'components/SearchBlock/SearchBlock';\nimport React from 'react';\n\nconst Search = () => {\n  return <SearchBlock />;\n};\n\nexport default Search;\n"],"names":["_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","filmName","get","_useState","useState","_useState2","results","setResults","location","useLocation","useEffect","fetch","concat","method","headers","accept","Authorization","then","response","json","catch","err","console","error","_jsxs","_Fragment","children","_jsx","className","styles","type","value","onChange","evt","target","search","length","map","el","Link","to","id","state","from","title","SearchBlock"],"sourceRoot":""}